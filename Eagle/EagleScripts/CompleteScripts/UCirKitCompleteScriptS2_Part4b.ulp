#include "UCirKitGlobalVarS2.ulp"
#include "UCirKitArrangeBoard.ulp"

// Only Bottom PCBs need to execute this!!

//---- Execution
output("UCirKitCompleteScriptS2_Part4b.txt"){
   arrangeBoard(innerPadsJpStartNum,
                innerPadsJpEndNum,
                colIncrement,
                !mirror,
                !breadboard,
                !rotateToVertical,
                !verticallySymmetric,
                !horizontallySymmetric,
                innerPadsStartX,
                innerPadsStartY,
                xSpacingBetweenInnerContacts,
                ySpacingBetweenInnerContacts,
                numOfRows,
                numOfCols);

   arrangeBoard(innerPadsJpStartNum + numOfRows * numOfCols,
                innerPadsJpEndNum + numOfRows * numOfCols,
                colIncrement,
                !mirror,
                !breadboard,
                !rotateToVertical,
                !verticallySymmetric,
                !horizontallySymmetric,
                innerPadsStartX,
                innerPadsStartY,
                xSpacingBetweenInnerContacts,
                ySpacingBetweenInnerContacts,
                numOfRows,
                numOfCols);

   arrangeBoard(horizontalPlatePadsForPaperJpStartNum,
                horizontalPlatePadsForPaperJpEndNum,
                colIncrement,
                !mirror,
                !breadboard,
                !rotateToVertical,
                !verticallySymmetric,
                !horizontallySymmetric,
                horizonatalPlatePadsForPaperStartX,
                horizonatalPlatePadsForPaperStartY,
                xSpacingBetweenHorizontalPlatePadsForPaper,
                0,
                numOfRowsForHorizontalPlatesForPaper,
                numOfColsForHorizontalPlatesForPaper);

   arrangeBoard(horizontalPlatePadsForPaperJpStartNum + numOfRowsForHorizontalPlatesForPaper * numOfColsForHorizontalPlatesForPaper,
                horizontalPlatePadsForPaperJpEndNum + numOfRowsForHorizontalPlatesForPaper * numOfColsForHorizontalPlatesForPaper,
                colIncrement,
                mirror,
                !breadboard,
                !rotateToVertical,
                verticallySymmetric,
                !horizontallySymmetric,
                horizonatalPlatePadsForPaperStartX,
                horizonatalPlatePadsForPaperStartY,
                xSpacingBetweenHorizontalPlatePadsForPaper,
                0,
                numOfRowsForHorizontalPlatesForPaper,
                numOfColsForHorizontalPlatesForPaper);

   arrangeBoard(verticalPlatePadsForPaperJpStartNum,
                verticalPlatePadsForPaperJpEndNum,
                !colIncrement,
                !mirror,
                !breadboard,
                rotateToVertical,
                !verticallySymmetric,
                !horizontallySymmetric,
                verticalPlatePadsForPaperStartX,
                verticalPlatePadsForPaperStartY,
                0,
                ySpacingBetweenVerticalPlatePadsForPaper,
                numOfRowsForVerticalPlatesForPaper,
                numOfColsForVerticalPlatesForPaper);

   arrangeBoard(verticalPlatePadsForPaperJpStartNum + numOfRowsForVerticalPlatesForPaper * numOfColsForVerticalPlatesForPaper,
                verticalPlatePadsForPaperJpEndNum + numOfRowsForVerticalPlatesForPaper * numOfColsForVerticalPlatesForPaper,
                !colIncrement,
                mirror,
                !breadboard,
                rotateToVertical,
                verticallySymmetric,
                !horizontallySymmetric,
                verticalPlatePadsForPaperStartX,
                verticalPlatePadsForPaperStartY,
                0,
                ySpacingBetweenVerticalPlatePadsForPaper,
                numOfRowsForVerticalPlatesForPaper,
                numOfColsForVerticalPlatesForPaper);
   // printf(commands);
}

exit(commands);